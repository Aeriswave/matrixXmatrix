Прочитал [статью](https://habr.com/ru/company/timeweb/blog/549360/), посвященную матричному умножению.
Можно ведь сделать и вообще без умножения.

А всего-то подготовить исходные данные в немного ином формате:
{A B} х {E F)
{C D} х {G H)

Где сами исходные данные записаны в виде:
A= (A, a=Log(A))
...
H=  (H, a=Log(H))

Тогда результат равен:
{A B} х {E F) = {alog(a+e)+alog(b+g)  alog(a+f)+alog(b+h)}
{C D} х {G H) = {alog(c+e)+alog(d+g)  alog(c+f)+alog(g+h)}

Если заранее посчитать логарифмы и антилогарифмы для нужного диапазона значений, то задача превращается просто в сложение обычных массивов, где:
(1) индекс первого массива = числу, а его значение логарифму этого числа;
(2) индекс второго массива = логарифму числа, а его значени значению этого числа.

.. Два этих массива можно связать в единую структуру данных с двумя индексами (число = антилогарифм, логарифм числа) и тремя значениями (число=антилогарифм, логарифм числа)
